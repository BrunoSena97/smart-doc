version: "3.9"

services:
  ollama:
    image: ollama/ollama:latest
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]
    volumes:
      - ollama_models:/root/.ollama
    expose:
      - "11434"
    environment:
      - OLLAMA_KEEP_ALIVE=30m
      - OLLAMA_NUM_PARALLEL=2
      - OLLAMA_GPU=1
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  api:
    build:
      context: ..
      dockerfile: deployments/docker/api.Dockerfile
    environment:
      - FLASK_ENV=production
      - LOG_LEVEL=INFO
      # LLM configuration - now points to ollama service
      - OLLAMA_BASE_URL=http://ollama:11434
      - OLLAMA_MODEL=${OLLAMA_MODEL:-gemma3:4b-it-q4_K_M}
      # Database path (SQLite) persisted on a volume
      - SMARTDOC_DB_URL=sqlite:////data/smartdoc.sqlite3
    volumes:
      - api_data:/data        # persist DB outside the container
    # no public ports â€“ internal only (accessed via web service)
    expose:
      - "8000"
    depends_on:
      ollama:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8000/healthz').read()"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  web:
    image: nginx:stable-alpine
    depends_on:
      api:
        condition: service_healthy
    volumes:
      - ../apps/web/public:/usr/share/nginx/html:ro
      - ./docker/web.nginx.conf:/etc/nginx/conf.d/default.conf:ro
    # this is the ONLY exposed port; Traefik will forward HTTPS to it
    ports:
      - "8000:8000"
    restart: unless-stopped

volumes:
  api_data:
  ollama_models:
